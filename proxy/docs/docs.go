// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/book": {
            "get": {
                "description": "This description created new SQL user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TakeBook"
                ],
                "summary": "List SQL book",
                "responses": {
                    "200": {
                        "description": "List successful",
                        "schema": {
                            "$ref": "#/definitions/control.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/control.rErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/control.rErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/control.rErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/book/take/{index}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This endpoint allows you to get geo coordinates by address.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TakeBook"
                ],
                "summary": "Get Geo Coordinates by Address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book INDEX",
                        "name": "index",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное выполнение",
                        "schema": {
                            "$ref": "#/definitions/service.ResponseAddress"
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/main.mErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка подключения к серверу",
                        "schema": {
                            "$ref": "#/definitions/main.mErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "control.CreateResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "control.rErrorResponse": {
            "type": "object",
            "properties": {
                "200": {
                    "type": "string"
                },
                "400": {
                    "type": "string"
                },
                "500": {
                    "type": "string"
                }
            }
        },
        "main.mErrorResponse": {
            "type": "object",
            "properties": {
                "200": {
                    "type": "string"
                },
                "400": {
                    "type": "string"
                },
                "500": {
                    "type": "string"
                }
            }
        },
        "service.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "geo_lat": {
                    "type": "string"
                },
                "geo_lon": {
                    "type": "string"
                },
                "house": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "service.ResponseAddress": {
            "type": "object",
            "properties": {
                "suggestions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "data": {
                                "$ref": "#/definitions/service.Address"
                            }
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Address API",
	Description:      "Этот эндпоинт позволяет получить адрес по наименованию",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
