definitions:
  auth.ErrorResponse:
    properties:
      "200":
        type: string
      "400":
        type: string
      "500":
        type: string
    type: object
  auth.LoginResponse:
    properties:
      message:
        type: string
    type: object
  auth.TokenResponse:
    properties:
      token:
        type: string
    type: object
  auth.User:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  control.CreateResponse:
    properties:
      message:
        type: string
    type: object
  control.rErrorResponse:
    properties:
      "200":
        type: string
      "400":
        type: string
      "500":
        type: string
    type: object
  main.TakeBookRequest:
    properties:
      username:
        description: Поле для имени пользователя
        type: string
    type: object
  main.mErrorResponse:
    properties:
      "200":
        type: string
      "400":
        type: string
      "500":
        type: string
    type: object
  service.Address:
    properties:
      city:
        type: string
      geo_lat:
        type: string
      geo_lon:
        type: string
      house:
        type: string
      street:
        type: string
    type: object
  service.ResponseAddress:
    properties:
      suggestions:
        items:
          properties:
            data:
              $ref: '#/definitions/service.Address'
          type: object
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: Этот эндпоинт позволяет получить адрес по наименованию
  title: Address API
  version: "1.0"
paths:
  /api/book:
    get:
      consumes:
      - application/json
      description: This description created new SQL user
      produces:
      - application/json
      responses:
        "200":
          description: List successful
          schema:
            $ref: '#/definitions/control.CreateResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/control.rErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/control.rErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/control.rErrorResponse'
      summary: List SQL book
      tags:
      - TakeBook
  /api/book/return/{index}:
    delete:
      consumes:
      - application/json
      description: This endpoint allows you to get geo coordinates by address.
      parameters:
      - description: Book INDEX
        in: path
        name: index
        required: true
        type: integer
      - description: Username of the user taking the book
        in: query
        name: username
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/main.TakeBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное выполнение
          schema:
            $ref: '#/definitions/service.ResponseAddress'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/main.mErrorResponse'
        "500":
          description: Ошибка подключения к серверу
          schema:
            $ref: '#/definitions/main.mErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Geo Coordinates by Address
      tags:
      - User
  /api/book/take/{index}:
    post:
      consumes:
      - application/json
      description: This endpoint allows you to get geo coordinates by address.
      parameters:
      - description: Book INDEX
        in: path
        name: index
        required: true
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/main.TakeBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное выполнение
          schema:
            $ref: '#/definitions/service.ResponseAddress'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/main.mErrorResponse'
        "500":
          description: Ошибка подключения к серверу
          schema:
            $ref: '#/definitions/main.mErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Geo Coordinates by Address
      tags:
      - User
  /api/login:
    post:
      consumes:
      - application/json
      description: This endpoint allows a user to log in with their username and password.
      parameters:
      - description: User login details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth.User'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/auth.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/auth.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/auth.ErrorResponse'
      summary: Login a user
      tags:
      - auth
  /api/register:
    post:
      consumes:
      - application/json
      description: This endpoint allows you to register a new user with a username
        and password.
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth.User'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            $ref: '#/definitions/auth.TokenResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/auth.ErrorResponse'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/auth.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/auth.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
